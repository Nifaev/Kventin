// <auto-generated />
using System;
using Kventin.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kventin.DataAccess.Migrations
{
    [DbContext(typeof(KventinContext))]
    [Migration("20250303183819_Start")]
    partial class Start
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kventin.DataAccess.Domain.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GroupLessonsCount")
                        .HasColumnType("int");

                    b.Property<int>("IndividualLessonsCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PeriodStartDate")
                        .HasColumnType("date");

                    b.Property<int>("TotalGroupLessonStudentsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeActivities");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("GroupLessonRate")
                        .HasColumnType("float");

                    b.Property<double>("GroupLessonStudentsRate")
                        .HasColumnType("float");

                    b.Property<double>("HourlyRate")
                        .HasColumnType("float");

                    b.Property<double>("IndividualLessonRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("EmployeeRates");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sum")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("WasPaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeSalaries");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeadlineDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsIndividual")
                        .HasColumnType("bit");

                    b.Property<int>("StudyGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudyGroupId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.ExerciseAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("StudentId");

                    b.ToTable("ExerciseAnswers");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classroom")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int?>("ScheduleItemId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StudyGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleItemId");

                    b.HasIndex("StudyGroupId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Mark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.HasIndex("LessonId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecieverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecieverId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecieverId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Student"
                        },
                        new
                        {
                            Id = 2,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teacher"
                        },
                        new
                        {
                            Id = 3,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "Parent"
                        },
                        new
                        {
                            Id = 4,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "SuperUser"
                        },
                        new
                        {
                            Id = 5,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminSchedule"
                        },
                        new
                        {
                            Id = 6,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminGroups"
                        },
                        new
                        {
                            Id = 7,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminStudyProgress"
                        },
                        new
                        {
                            Id = 8,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminAnnouncements"
                        },
                        new
                        {
                            Id = 9,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminFinances"
                        },
                        new
                        {
                            Id = 10,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminPersonalAccounts"
                        },
                        new
                        {
                            Id = 11,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            Name = "AdminRegistration"
                        });
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndYear")
                        .HasColumnType("int");

                    b.Property<int>("StartYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.ScheduleItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classroom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("StudyGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.HasIndex("StudyGroupId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ScheduleItems");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.StudentActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GroupLessonsCount")
                        .HasColumnType("int");

                    b.Property<int>("IndividualLessonsCount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("PeriodEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PeriodStartDate")
                        .HasColumnType("date");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TariffId");

                    b.ToTable("StudentActivities");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.StudyGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudyGroups");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.TuitionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractBumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDateTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sum")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("WasPaid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PayerId");

                    b.ToTable("TuitionPayments");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.TuitionTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIndividual")
                        .HasColumnType("bit");

                    b.Property<int>("LessonsCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("TuitionTariffs");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<bool>("IsSuperUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TgLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VkLink")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDateTime = new DateTime(2025, 1, 18, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Суперпользователь",
                            HashedPassword = "$2a$11$fOB6qIW/7qIQzJWq.mcS6ugc6UoFPAWctpSDZJQj5uaKTNiqiQ9xO",
                            IsSuperUser = true,
                            LastName = "Встроенный",
                            PhoneNumber = "1234567890"
                        });
                });

            modelBuilder.Entity("ParentsChildren", b =>
                {
                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ParentId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ParentsChildren");
                });

            modelBuilder.Entity("StudentLessons", b =>
                {
                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("LessonId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentLessons");
                });

            modelBuilder.Entity("StudentStudyGroups", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("StudyGroupId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "StudyGroupId");

                    b.HasIndex("StudyGroupId");

                    b.ToTable("StudentStudyGroups");
                });

            modelBuilder.Entity("StudentsTariffs", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "TariffId");

                    b.HasIndex("TariffId");

                    b.ToTable("StudentsTariffs");
                });

            modelBuilder.Entity("UsersRoles", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 4,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Announcement", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Author")
                        .WithMany("Announcements")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeActivity", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Employee")
                        .WithMany("EmployeeActivities")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeRate", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Employee")
                        .WithOne("EmployeeRate")
                        .HasForeignKey("Kventin.DataAccess.Domain.EmployeeRate", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.EmployeeSalary", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Employee")
                        .WithMany("EmployeeSalary")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Exercise", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.StudyGroup", "StudyGroup")
                        .WithMany("RecievedExercises")
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Teacher")
                        .WithMany("AssignedExercises")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudyGroup");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.ExerciseAnswer", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Exercise", "Exercise")
                        .WithMany("Answers")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Student")
                        .WithMany("ExerciseAnswers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Lesson", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.ScheduleItem", "ScheduleItem")
                        .WithMany("Lessons")
                        .HasForeignKey("ScheduleItemId");

                    b.HasOne("Kventin.DataAccess.Domain.StudyGroup", "StudyGroup")
                        .WithMany("Lessons")
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.Subject", "Subject")
                        .WithMany("Lessons")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Teacher")
                        .WithMany("ConductedLessons")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScheduleItem");

                    b.Navigation("StudyGroup");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Mark", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Exercise", "Exercise")
                        .WithMany("Marks")
                        .HasForeignKey("ExerciseId");

                    b.HasOne("Kventin.DataAccess.Domain.Lesson", "Lesson")
                        .WithMany("Marks")
                        .HasForeignKey("LessonId");

                    b.HasOne("Kventin.DataAccess.Domain.User", "Student")
                        .WithMany("RecievedMarks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Teacher")
                        .WithMany("AssignedMarks")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Lesson");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Message", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Reciever")
                        .WithMany("RecievedMessages")
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reciever");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Notification", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Reciever")
                        .WithMany("Notifications")
                        .HasForeignKey("RecieverId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reciever");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.ScheduleItem", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Schedule", "Schedule")
                        .WithMany("Items")
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.StudyGroup", "StudyGroup")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.Subject", "Subject")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", "Teacher")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("StudyGroup");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.StudentActivity", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Student")
                        .WithMany("StudentActivities")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.TuitionTariff", "Tariff")
                        .WithMany("StudentActivities")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.StudyGroup", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Subject", "Subject")
                        .WithMany("StudyGroups")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.TuitionPayment", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", "Payer")
                        .WithMany("TuitionPayment")
                        .HasForeignKey("PayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Payer");
                });

            modelBuilder.Entity("ParentsChildren", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentLessons", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentStudyGroups", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.StudyGroup", null)
                        .WithMany()
                        .HasForeignKey("StudyGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentsTariffs", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.TuitionTariff", null)
                        .WithMany()
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("UsersRoles", b =>
                {
                    b.HasOne("Kventin.DataAccess.Domain.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Kventin.DataAccess.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Exercise", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Marks");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Lesson", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Schedule", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.ScheduleItem", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.StudyGroup", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("RecievedExercises");

                    b.Navigation("ScheduleItems");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.Subject", b =>
                {
                    b.Navigation("Lessons");

                    b.Navigation("ScheduleItems");

                    b.Navigation("StudyGroups");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.TuitionTariff", b =>
                {
                    b.Navigation("StudentActivities");
                });

            modelBuilder.Entity("Kventin.DataAccess.Domain.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("AssignedExercises");

                    b.Navigation("AssignedMarks");

                    b.Navigation("ConductedLessons");

                    b.Navigation("EmployeeActivities");

                    b.Navigation("EmployeeRate");

                    b.Navigation("EmployeeSalary");

                    b.Navigation("ExerciseAnswers");

                    b.Navigation("Notifications");

                    b.Navigation("RecievedMarks");

                    b.Navigation("RecievedMessages");

                    b.Navigation("ScheduleItems");

                    b.Navigation("SentMessages");

                    b.Navigation("StudentActivities");

                    b.Navigation("TuitionPayment");
                });
#pragma warning restore 612, 618
        }
    }
}
